name: build

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]
  schedule:
    # At 23:25 on Thursday.
    - cron: "25 23 * * 4"

jobs:
  test:
    strategy:
      matrix:
        runs-on: [ubuntu-20.04, windows-2022, macos-12]
        toolchain: ["1.48", stable, nightly]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        id: actions-rs
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-test-${{ steps.actions-rs.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ steps.actions-rs.outputs.rustc_hash }}-
            ${{ runner.os }}-test-
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
      - run: cargo test --all-targets -- --show-output
      - run: cargo test --all-targets --no-default-features -- --show-output
      - run: cargo run --example stress-test
      - run: cargo run --example stress-test --no-default-features

  web-assembly:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: ["1.56", stable, nightly]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        id: actions-rs
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          target: wasm32-unknown-unknown
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-wasm-${{ matrix.toolchain }}-${{ steps.actions-rs.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-wasm-${{ matrix.toolchain }}-${{ steps.actions-rs.outputs.rustc_hash }}-
            ${{ runner.os }}-wasm-${{ matrix.toolchain }}-
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/bin/
            target/
      - run: which wasm-pack || cargo install wasm-pack
      - run: wasm-pack test --node

  build-cross:
    strategy:
      matrix:
        target: [x86_64-unknown-freebsd, x86_64-unknown-netbsd]
        toolchain: [stable, nightly]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        id: actions-rs
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          target: ${{ matrix.target }}
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cross-${{ matrix.toolchain }}-${{ matrix.target }}-${{ steps.actions-rs.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cross-${{ matrix.toolchain }}-${{ matrix.target }}-${{ steps.actions-rs.outputs.rustc_hash }}-
            ${{ runner.os }}-cross-${{ matrix.toolchain }}-${{ matrix.target }}-
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/bin/
            target/
      - run: which cross || cargo install cross
      - run: cross build --target ${{ matrix.target }} --examples
      - run: cross build --target ${{ matrix.target }} --examples --no-default-features

  build-ios-cross:
    strategy:
      matrix:
        target: [aarch64-apple-ios-sim, aarch64-apple-ios, x86_64-apple-ios]
        toolchain: [stable, nightly]
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        id: actions-rs
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          target: ${{ matrix.target }}
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cross-${{ matrix.toolchain }}-${{ matrix.target }}-${{ steps.actions-rs.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cross-${{ matrix.toolchain }}-${{ matrix.target }}-${{ steps.actions-rs.outputs.rustc_hash }}-
            ${{ runner.os }}-cross-${{ matrix.toolchain }}-${{ matrix.target }}-
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/bin/
            target/
      - run: which cross || cargo install cross
      - run: cross build --target ${{ matrix.target }} --examples
      - run: cross build --target ${{ matrix.target }} --examples --no-default-features

  check:
    strategy:
      matrix:
        toolchain: ["1.48", stable, nightly]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        id: actions-rs
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          components: clippy
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-check-${{ steps.actions-rs.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-check-${{ steps.actions-rs.outputs.rustc_hash }}-
            ${{ runner.os }}-check-
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
      - run: cargo check --all-targets
      - run: cargo clippy --all-targets -- -D warnings

  doc:
    name: "Documentation"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        id: actions-rs
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-doc-${{ steps.actions-rs.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-doc-${{ steps.actions-rs.outputs.rustc_hash }}-
            ${{ runner.os }}-doc-
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
      - run: RUSTDOCFLAGS="-D warnings --cfg docsrs" cargo doc --all-features --no-deps

  audit:
    name: "Cargo audit"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-audit-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-audit-
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
      - name: Audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
